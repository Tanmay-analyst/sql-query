ALTER TABLE project.dbo.data1
DROP COLUMN F8,F9,F10,F11,F12,F13,F14,F15,F16,F17,F18,F19,F20,F21,F22,F23,F24,F25,F26
SELECT COUNT(DISTRICT)
 FROM PROJECT.DBO.DATA1
DELETE FROM PROJECT.DBO.DATA2
WHERE  DISTRICT IS NULL OR STATE IS NULL OR Area_km2 IS NULL OR Population IS NULL
DELETE FROM PROJECT.DBO.DATA1
WHERE  DISTRICT IS NULL OR STATE IS NULL OR GROWTH IS NULL OR Literacy IS NULL OR Sex_Ratio IS NULL
SELECT* FROM PROJECT.DBO.DATA2
SELECT * FROM PROJECT.DBO.DATA1
ALTER TABLE project.dbo.data2
DROP COLUMN F5,F6,F7

--NUMBER OF ROWS IN OUR DATASET
SELECT COUNT(*) FROM PROJECT..Data2
SELECT COUNT(*) FROM PROJECT..Data1

--DATASET FOR JHARKAND AND BIHAR
SELECT * FROM PROJECT..Data1 WHERE STATE IN('JHARKHAND','BIHAR')

--POPULATION OF INDIA
SELECT * FROM PROJECT..Data2
SELECT SUM(POPULATION) AS TOTAL_POPULATION FROM PROJECT..Data2

--AVG GROWTH 
SELECT STATE,AVG(GROWTH)*100 AS AVG_GROWTH FROM PROJECT..Data1
GROUP BY STATE

--AVG SEX RATIO
SELECT STATE,ROUND(AVG(Sex_Ratio),0) AS AVG_SEX_RATIO FROM PROJECT..Data1
GROUP BY STATE 
ORDER BY AVG_SEX_RATIO DESC

--AVG LITERACY RATE
SELECT STATE,ROUND(AVG(LITERACY),0) AS AVG_LITERACY FROM PROJECT..Data1
GROUP BY STATE
HAVING ROUND(AVG(LITERACY),0)>90
ORDER BY AVG_LITERACY DESC

--TOP 3 STATE SHOWING HIGHEST GROWTH RATIO
SELECT  TOP 3 STATE,AVG(GROWTH)*100 AS AVG_GROWTH FROM PROJECT..Data1
GROUP BY STATE 
ORDER BY AVG_GROWTH DESC                                           --LIMIT 3

--BOTTOM 3 STATE SHOWING LOWEST GROWTH RATIO
SELECT  TOP 3 STATE,AVG(GROWTH)*100 AS AVG_GROWTH FROM PROJECT..Data1
GROUP BY STATE 
ORDER BY AVG_GROWTH 

--TOP AND BOTTOM 3 STATES IN LITERACY RATE
DROP TABLE IF EXISTS #TOPSTATES
 CREATE TABLE #TOPSTATES
 (STATE NVARCHAR(255),TOPSTATES FLOAT)
 INSERT INTO #TOPSTATES SELECT STATE ,ROUND(AVG(LITERACY),0) AS AVG_LITERACY_RATIO FROM PROJECT..Data1
GROUP BY STATE 
ORDER BY AVG_LITERACY_RATIO DESC 
SELECT TOP 3 * FROM #TOPSTATES ORDER BY #TOPSTATES.TOPSTATES DESC

DROP TABLE IF EXISTS #BOTTOMSTATES
 CREATE TABLE #BOTTOMSTATES
 (STATE NVARCHAR(255),BOTTOMSTATES FLOAT)
 INSERT INTO #BOTTOMSTATES SELECT STATE ,ROUND(AVG(LITERACY),0) AS AVG_LITERACY_RATIO FROM PROJECT..Data1
GROUP BY STATE 
ORDER BY AVG_LITERACY_RATIO DESC 
SELECT TOP 3 * FROM #BOTTOMSTATES ORDER BY #BOTTOMSTATES.BOTTOMSTATES

--UNION OPERATOR
SELECT * FROM(
SELECT TOP 3 * FROM #TOPSTATES ORDER BY #TOPSTATES.TOPSTATES DESC) A
UNION
SELECT * FROM(
SELECT TOP 3 * FROM #BOTTOMSTATES ORDER BY #BOTTOMSTATES.BOTTOMSTATES) B

--STATES STARTING WITH LETTER A OR B
SELECT  DISTINCT STATE FROM PROJECT..Data1
WHERE STATE LIKE 'a%' OR STATE LIKE 'B%'

--STATES STARTING WITH LETTER A AND ENDING WITH LETTER M
SELECT  DISTINCT STATE FROM PROJECT..Data1
WHERE STATE LIKE 'a%' AND STATE LIKE '%M'

--JOINING BOTH TABLE
SELECT A.DISTRICT ,A.STATE ,A.SEX_RATIO,B.Population FROM PROJECT..Data1  A
INNER JOIN PROJECT..Data2 B ON A.DISTRICT=B.DISTRICT

 --TOTAL MALES AND FEMALES
 SELECT D.STATE,SUM(D.MALES) TOTAL_MALES,SUM(D.FEMALES) TOTAL_FEMALES 
 FROM (SELECT  C.DISTRICT ,C.STATE ,ROUND(C.POPULATION/(C.SEX_RATIO +1),0)MALES,
 ROUND((C.POPULATION*C.SEX_RATIO)/(C.SEX_RATIO+1),0) FEMALES FROM
 (SELECT A.DISTRICT ,A.STATE ,A.SEX_RATIO/1000 SEX_RATIO,B.Population FROM PROJECT..Data1  A
INNER JOIN PROJECT..Data2 B ON A.DISTRICT=B.DISTRICT)C)D
GROUP BY D.STATE

-- TOTAL LITERACY RATE
select c.state,sum(literate_people) total_literate,sum(illiterate_people) total_illiterate from(
SELECT D.DISTRICT, D.STATE, ROUND(D.LITERACY_RATIO*POPULATION,0) LITERATE_PEOPLE,ROUND((1-D.LITERACY_RATIO)*D.POPULATION,0) ILLITERATE_PEOPLE
FROM(
SELECT A.DISTRICT ,A.STATE ,A.LITERACY/100 LITERACY_RATIO,B.Population FROM PROJECT..Data1  A
INNER JOIN PROJECT..Data2 B ON A.DISTRICT=B.DISTRICT) D)c
group by c.state

--population in previous census
SELECT SUM(M.PREVIOUS_POPULATION)  PREVIOUS_POPULATION,SUM(M.CURRENT_POPULATION) CURRENT_POPULATION FROM(
SELECT E.STATE,SUM(E.PREVIOUS_CENSUS_POPULATION) PREVIOUS_POPULATION ,SUM(E.CURRENT_POPULATION) CURRENT_POPULATION FROM(
SELECT D.DISTRICT,D.STATE,ROUND(D.POPULATION/(1+D.GROWTH_RATIO),0) PREVIOUS_CENSUS_POPULATION,D.POPULATION CURRENT_POPULATION FROM
(SELECT A.DISTRICT ,A.STATE ,A.growth GROWTH_RATIO,B.Population FROM PROJECT..Data1  A
INNER JOIN PROJECT..Data2 B ON A.DISTRICT=B.DISTRICT)D)E
GROUP  BY E.STATE)M

--POPULATION VS AREA
SELECT (G.TOTAL_AREA/G.PREVIOUS_POPULATION) AS PREVIOUS_POPULATION_VS_AREA, (G.TOTAL_AREA/G.CURRENT_POPULATION)
AS CURRENT_POPULATION_VS_AREA FROM(
SELECT Q.*,R.TOTAL_AREA FROM(
SELECT '1' AS KEYY,N.* FROM(
SELECT SUM(M.PREVIOUS_POPULATION)  PREVIOUS_POPULATION,SUM(M.CURRENT_POPULATION) CURRENT_POPULATION FROM(
SELECT E.STATE,SUM(E.PREVIOUS_CENSUS_POPULATION) PREVIOUS_POPULATION ,SUM(E.CURRENT_POPULATION) CURRENT_POPULATION FROM(
SELECT D.DISTRICT,D.STATE,ROUND(D.POPULATION/(1+D.GROWTH_RATIO),0) PREVIOUS_CENSUS_POPULATION,D.POPULATION CURRENT_POPULATION FROM
(SELECT A.DISTRICT ,A.STATE ,A.growth GROWTH_RATIO,B.Population FROM PROJECT..Data1  A
INNER JOIN PROJECT..Data2 B ON A.DISTRICT=B.DISTRICT)D)E
GROUP  BY E.STATE)M)N)Q INNER JOIN(
SELECT '1' AS KEYY ,Z.* FROM(
SELECT SUM(AREA_KM2) TOTAL_AREA FROM PROJECT..DATA2)Z)R ON Q.KEYY=R.KEYY)G


--WINDOW FUNCTION
--OUTPUT TOP 3 DISTRICTS FROM EACH STATE WITH HIGHEST LITERACY RATE
SELECT A.* FROM(
SELECT DISTRICT,STATE,LITERACY,RANK()OVER (PARTITION BY STATE ORDER BY LITERACY DESC) RNK FROM PROJECT..DATA1)A
WHERE A.RNK IN (1,2,3)ORDER BY STATE